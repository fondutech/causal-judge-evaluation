# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
docs/.cache/
api/generated/
_generated/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc
pip.conf

# Personal configuration files
scripts/load_my_secrets.py
scripts/personal_notes.md

# AWS API key retrieval scripts (security - don't expose in public repo)
get_api_keys.sh
get_api_keys_simple.sh
API_KEYS_README.md
set_secrets.sh

# IDE and editor files
.idea/
.vscode/
*.swp
*.swo
*~
.DS_Store

# Claude Code specific
CLAUDE.md
_last_work_dir.txt

# CJE experiment outputs
outputs/
target_samples.jsonl
*_checkpoint.jsonl
pi0_data*.jsonl

# Test data - explicitly include for version control
!cje/tests/data/
!cje/tests/data/**/*.jsonl

# API keys and credentials
*.key
*.pem
secrets.yaml
credentials.json

# Temporary files
tmp/
temp/
cache/
*.tmp
*.bak

# Concatenation scripts and outputs (local utilities)
concat_for_chat.py
concat_cje.sh
concat_*.txt
cje_for_chatbot.txt
concat_all.txt
concat_output.txt
concat.config
cje_core.config
cje_chatbot.config

# Research/experimental files that shouldn't be public
scratch/
experiments/*/outputs/
experiments/*/results/
experiments/*/.cache/
research_notes/
*.draft.*

# CJE test outputs (from e2e pipeline tests)
cje/experiments/arena_10k_simplified/test_e2e_data/ablation_data/
cje/experiments/arena_10k_simplified/test_e2e_data/ablation_results/
cje/experiments/arena_10k_simplified/test_e2e_data/*.jsonl
cje/experiments/arena_10k_simplified/test_e2e_data/logprobs/

# Data files - ignore all JSONL/CSV except in the arena dataset
*.jsonl
*.csv
# But keep the arena dataset files
!cje/experiments/arena_10k_simplified/data/*.jsonl
!cje/experiments/arena_10k_simplified/data/*.csv

# Ablation caches and results
.ablation_cache/
ablation_results/
*.log
